generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(cuid())
  email          String    @unique
  name           String
  password       String    @default("password")
  resetToken     String?
  resetTokenExpiry DateTime?
  role           Role      @default(USER)
  active         Boolean   @default(true)
  lastLogin      DateTime?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  createdChanges Change[]  @relation("RequestedBy")
  approvedChanges Change[] @relation("ApprovedBy")
  comments       Comment[]
  activityLogs   ActivityLog[]
}

model ActivityLog {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  action    String
  details   Json?
  createdAt DateTime @default(now())
}

model SystemSetting {
  id          String   @id @default(cuid())
  key         String   @unique
  value       String
  description String?
  category    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Change {
  id          String    @id @default(cuid())
  title       String
  description String
  status      Status    @default(PENDING)
  priority    Priority
  type        String
  impact      Impact
  requesterId String
  requestedBy User      @relation("RequestedBy", fields: [requesterId], references: [id])
  approverId  String?
  approvedBy  User?     @relation("ApprovedBy", fields: [approverId], references: [id])
  plannedStart DateTime?
  plannedEnd   DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  comments    Comment[] // Add this line for Comment relation
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  changeId  String
  change    Change   @relation(fields: [changeId], references: [id])
}

enum Role {
  USER
  MANAGER
  ADMIN
}

enum Status {
  PENDING
  APPROVED
  REJECTED
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

enum Impact {
  LOW
  MEDIUM
  HIGH
}
